2 residuals subplot on left side for big one? how to do this?
3 maybe have a look at the data links from lucas example
4 dragging modifiers across the treewidget with scrolling
    try with debugger and
    start sasview normally and connect a debugger manually
5 delete button for modifiers

what are future functionalities that can be built in into this?
slicers?
publication ready plots? or close to?

keep the dataviewer alive while transfering to sasview?

keep a branch alive where everything is working properly and it is not
destroyed :D

explore how difficult it is to integrate the functionalities from now into the 
existing sasview


have a look at colormap.py in sasview/src/sas/qtgui/Plotting/ColorMap.py

revert back to the earlier state by button?
kill a fittab with out prompt? maybe settings?
    onProjectLoad, onApplicationExit
    open Issue with this- settings option for are you sure you want to kill this fit tab


Lionels request regarding this repository: 
https://github.com/criosx/molgroups/tree/main

https://doodle.com/meeting/participate/id/eZmlx5gd/

how can the current functionality be processed in sasview? new perspective that is the tabbed plotwidget,
which processes signals and plots by references to model indexes?





sasview integration:
where does the plotting widget live? can it be an extra window that is

das fenster muss erstmal irgendwo erzeugt werden, wenn das erste mal gefittet wird. oder direkt mit dem

zuerst: alles parallel laufen lassen und das fenster zusätzlich zu den normalen plots erzeugen
die plots, die schon automatisch erstellt werden, kann man dann redirecten in das tabbed widget

PlotterWidget erbt von PlotterBase (PlotterWidget ist in Klasse Plotter.py)
PlotterBase erbt von QWidget
PlotterBase hat den manager aus der Erzeugung von PlotterWidget
PlotterWidget wird erzeugt in DataExplorer.py plotData new_plot = PlotterWidget(manager=self, parent=self)

DataExplorerWidget ist der Manager von PlotterWidget
GuiManager._data_manger is Manager von DataExplorerWidget und GuiManager ist guimanager von DataExplorerWidget
GuiManager parent ist MainWindow
GuiManager self.communicate kommt aus GuiUtils.Communicate()
GuiUtils Klasse Communicate erbt von QtCore.QObject. Hier sind alle Signale, die gebraucht und verarbeitet werden.
    in GuiManager werden die Signale dann verbunden mit slots unter addcallbacks?

Was macht der manager in plotterwidget?
Lässt auf den Communicator vom Manager zugreifen und diesen ein Signal aussenden
Der Communicator kommt immer durch self.parent.communicator()

how to show the window on plot signal. if it already shown, activate it. if not shown, show and activate
    this needs the tabbed plot widget to not be a single window on top, but to be embedded into the canvas. how to
    do that? :-)

signal for plot goes to guimanager.showplotfromname or guimanager.showplot
redirects to DataExplorerWidget.displaydata or dataexplorerwidget.displaydatabyname
displaydata ends in either active_plots.showNormal() or plotData or updatePlot or appendOrUpdatePlot

active_plots.showNormal ends in

appendorupdateplot ends in Plotter2dWidget.replacePlot or plot.plot